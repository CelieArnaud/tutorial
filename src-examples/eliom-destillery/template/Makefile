#define COMMENT ##
#define STAR *

PROJECT_NAME := ##PROJECT_NAME##
#ifndef MINIMAL_PROJECT
DATABASE_USER=##DATABASE_USER##
DATABASE_NAME=##DATABASE_NAME##
#endif
LOCAL_PREFIX := local
INSTALL_PREFIX := /tmp/root

DATADIR := var/www/data/${PROJECT_NAME}
LOGDIR := var/log/${PROJECT_NAME}
CMDPIPE := var/run/${PROJECT_NAME}-cmd
STATICDIR := var/www/${PROJECT_NAME}
LIBDIR := var/lib/${PROJECT_NAME}
ETCDIR := etc/${PROJECT_NAME}

COMMENT OCamlfind packages to be linked on the server
SERVER_PACKAGES =
COMMENT OCamlfind packages to be linked on the client
CLIENT_PACKAGES =
#ifndef MINIMAL_PROJECT
SERVER_PACKAGES += macaque.syntax
CLIENT_PACKAGES += macaque.syntax
#endif

#ifdef MINIMAL_PROJECT
COMMENT Source files for the server part
SERVER_FILES := ##PROJECT_NAME##.eliom
COMMENT Source files for the client part
CLIENT_FILES := ##PROJECT_NAME##.eliom
#else
COMMENT Source files for the server part
SERVER_FILES := shared.ml config.ml
#ifdef WITH_DATABASE
SERVER_FILES += database.ml
#endif
SERVER_FILES += services.ml widgets.eliom ${PROJECT_NAME}.eliom
COMMENT Source files for the client part
CLIENT_FILES := shared.ml widgets.eliom ${PROJECT_NAME}.eliom
#endif

COMMENT Required binaries

ELIOMC      := eliomc
ELIOMOPT    := eliomopt
ELIOMDEP    := eliomdep
JS_OF_ELIOM := js_of_eliom

COMMENT Where to put intermediate object files.
COMMENT - ELIOM_{SERVER,CLIENT}_DIR must be distinct
COMMENT - ELIOM_CLIENT_DIR must not be the local dir.
COMMENT - ELIOM_SERVER_DIR could be ".", but you need to
COMMENT   remove it from the "clean" rules...

export ELIOM_SERVER_DIR := _server
export ELIOM_CLIENT_DIR := _client
export ELIOM_TYPE_DIR   := .

COMMENT------------------------------------------------------------------------------
COMMENT General

all: byte

byte:: ${PROJECT_NAME}.cma ${PROJECT_NAME}.js
opt:: ${PROJECT_NAME}.cmxs ${PROJECT_NAME}.js

PHONY: install run

run.local: byte ${PROJECT_NAME}-local.conf
	mkdir -p $(LOCAL_PREFIX)/${DATADIR}
	mkdir -p $(LOCAL_PREFIX)/${LIBDIR}
	mkdir -p $(LOCAL_PREFIX)/${STATICDIR}
	mkdir -p $(LOCAL_PREFIX)/${LOGDIR}
	mkdir -p $(LOCAL_PREFIX)/${shell dirname ${CMDPIPE}}
	ln -sf ../${PROJECT_NAME}.js static
	ocsigenserver -c ${PROJECT_NAME}-local.conf

install: byte ${PROJECT_NAME}.conf
	mkdir -p ${INSTALL_PREFIX}/${DATADIR}
	mkdir -p ${INSTALL_PREFIX}/${LIBDIR}
	mkdir -p ${INSTALL_PREFIX}/${STATICDIR}
	mkdir -p ${INSTALL_PREFIX}/${LOGDIR}
	mkdir -p ${INSTALL_PREFIX}/${ETCDIR}
	mkdir -p ${INSTALL_PREFIX}/${shell dirname ${CMDPIPE}}
	cp ${PROJECT_NAME}.cma ${INSTALL_PREFIX}/${LIBDIR}
	cp ${PROJECT_NAME}.js ${INSTALL_PREFIX}/${STATICDIR}
	cp -r static/STAR ${INSTALL_PREFIX}/${STATICDIR}
	cp ${PROJECT_NAME}.conf ${INSTALL_PREFIX}/${ETCDIR}

run: ${PROJECT_NAME}.cma ${PROJECT_NAME}.js ${PROJECT_NAME}.conf
	ocsigenserver -c ${INSTALL_PREFIX}/${ETCDIR}/${PROJECT_NAME}.conf

COMMENT------------------------------------------------------------------------------
COMMENT ocsigenserver config files

SED_ARGS=\
  -e "/^%%%/d" \
  -e "s|%%PROJECT_NAME%%|${PROJECT_NAME}|g" \
  -e "s|%%PORT%%|${PORT}|g" \
  -e "s|%%DATABASE_NAME%%|${DATABASE_NAME}|g" \
  -e "s|%%DATABASE_USER%%|${DATABASE_USER}|g" \
  -e "s|%%CMDPIPE%%|%%PREFIX%%/${CMDPIPE}|g" \
  -e "s|%%LOGDIR%%|%%PREFIX%%/${LOGDIR}|g" \
  -e "s|%%WARNING%%|DO NO EDIT! This file is generated by ${PROJECT_NAME}.conf.in, edit this one, or the Makefile.|g"

LOCAL_SED_ARGS=\
  -e "s|%%LIBDIR%%|${shell pwd}|" \
  -e "s|%%STATICDIR%%|${shell pwd}/static|"

GLOBAL_SED_ARGS=\
  -e "s|%%LIBDIR%%|%%PREFIX%%/${LIBDIR}/|" \
  -e "s|%%STATICDIR%%|%%PREFIX%%/${STATICDIR}|"

${PROJECT_NAME}-local.conf: ${PROJECT_NAME}.conf.in Makefile
	sed $(SED_ARGS) $(LOCAL_SED_ARGS) $< \
	  | sed -e "s|%%PREFIX%%|${shell pwd}/local|" \
	  > $@

${PROJECT_NAME}.conf: ${PROJECT_NAME}.conf.in Makefile
	sed $(SED_ARGS) $(GLOBAL_SED_ARGS) $< \
	  | sed -e "s|%%PREFIX%%|$(INSTALL_PREFIX)|" \
	  > $@

COMMENT------------------------------------------------------------------------------
COMMENT Server side compilation

SERVER_INC  := ${addprefix -package ,${SERVER_PACKAGES}}

SERVER_OBJS := $(patsubst %.eliom,${ELIOM_SERVER_DIR}/%.cmo, ${SERVER_FILES})
SERVER_OBJS := $(patsubst %.ml,${ELIOM_SERVER_DIR}/%.cmo, ${SERVER_OBJS})

${PROJECT_NAME}.cma: ${SERVER_OBJS}
	${ELIOMC} -a -o $@ $^
${PROJECT_NAME}.cmxa: ${SERVER_OBJS:.cmo=.cmx}
	${ELIOMOPT} -a -o $@ $^

${ELIOM_TYPE_DIR}/%.type_mli: %.eliom
	${ELIOMC} -infer ${SERVER_INC} $<

${ELIOM_SERVER_DIR}/%.cmi: %.mli
	${ELIOMC} -c ${SERVER_INC} $<

${ELIOM_SERVER_DIR}/%.cmo: %.ml
	${ELIOMC} -c ${SERVER_INC} $<
${ELIOM_SERVER_DIR}/%.cmo: %.eliom
	${ELIOMC} -c -noinfer ${SERVER_INC} $<

${ELIOM_SERVER_DIR}/%.cmx: %.ml
	${ELIOMOPT} -c ${SERVER_INC} $<
${ELIOM_SERVER_DIR}/%.cmx: %.eliom
	${ELIOMOPT} -c -noinfer ${SERVER_INC} $<

%.cmxs: %.cmxa
	$(ELIOMOPT) -shared -linkall -o $@ $<

COMMENT------------------------------------------------------------------------------
COMMENT Client side compilation

CLIENT_LIBS := ${addprefix -package ,${CLIENT_PACKAGES}}
CLIENT_INC  := ${addprefix -package ,${CLIENT_PACKAGES}}

CLIENT_OBJS := $(patsubst %.eliom,${ELIOM_CLIENT_DIR}/%.cmo, ${CLIENT_FILES})
CLIENT_OBJS := $(patsubst %.ml,${ELIOM_CLIENT_DIR}/%.cmo, ${CLIENT_OBJS})

${PROJECT_NAME}.js: ${CLIENT_OBJS}
	${JS_OF_ELIOM} -o $@ ${CLIENT_LIBS} $^

${ELIOM_CLIENT_DIR}/%.cmi: %.mli
	${JS_OF_ELIOM} -c ${CLIENT_INC} $<

${ELIOM_CLIENT_DIR}/%.cmo: %.eliom
	${JS_OF_ELIOM} -c ${CLIENT_INC} $<
${ELIOM_CLIENT_DIR}/%.cmo: %.ml
	${JS_OF_ELIOM} -c ${CLIENT_INC} $<

COMMENT------------------------------------------------------------------------------
COMMENT Dependencies

depend: .depend
.depend: ${SERVER_FILES} ${CLIENT_FILES}
	$(ELIOMDEP) -server ${SERVER_INC} ${SERVER_FILES} > .depend
	$(ELIOMDEP) -client ${CLIENT_INC} ${CLIENT_FILES} >> .depend

include .depend
COMMENT Warning: Dependencies towards *.eliom are not handled by eliomdep yet.
#ifndef MINIMAL_PROJECT
_server/##PROJECT_NAME##.cmo: _server/widgets.cmo
_server/##PROJECT_NAME##.cmx: _server/widgets.cmx
#endif

COMMENT------------------------------------------------------------------------------
COMMENT Clean up

clean:
	-rm -f *.cm[ioax] *.cmxa *.cmxs *.o *.a *.annot
	-rm -f *.type_mli
	-rm -f ${PROJECT_NAME}.js
	-rm -rf ${ELIOM_CLIENT_DIR} ${ELIOM_SERVER_DIR}

distclean: clean.local
	-rm -f ${PROJECT_NAME}-local.conf ${PROJECT_NAME}.conf
