=Hash your passwords=

For protecting the user passwords or other sensitive data,
we need to hide them.

For this purpose, we will use
[[https://forge.ocamlcore.org/projects/cryptokit/|Cryptokit]]
which is already used by Ocsigen.

For example, we define a password:
<<code language="ocaml"|
let password = "IamYourPassword"
>>

and then, hash it using Cryptokit, with
[[https://en.wikipedia.org/wiki/Sha256|sha256]]:
<<code language="ocaml"|
let hashed_password =
  Cryptokit.hash_string (Cryptokit.Hash.sha256 ()) password
>>

Note: Cryptokit allow you to use:
- [[https://en.wikipedia.org/wiki/Sha1|sha1]]
- [[https://en.wikipedia.org/wiki/Sha256|sha256]]
- [[https://en.wikipedia.org/wiki/RIPEMD160|ripemd160]]
- [[https://en.wikipedia.org/wiki/Md5|md5]]

We can now write the hashed password in our database
using <<a_api project="ocsigenserver"| type Ocsipersist.table >> as follow:
<<code language="ocaml"|
let table =
  Ocsipersist.open_table "users"

let add_user username password =
  (* Check if the user is already exist *)
  Lwt.try_bind
    (fun () -> Ocsipersist.find table username)
    (fun _ -> Lwt.return false)
    (fun _ ->
      Ocsipersist.add table username
        (User.user_new password email) ~>>= (fun () ->
          Lwt.return true))
>>

<<concept title="Digest"|
You can use the standard library
[[http://caml.inria.fr/pub/docs/manual-ocaml/libref/Digest.html|Digest]]
instead of Cryptokit

This library use only the md5 algorithm.

<<code language="ocaml"|
let hashed_password = Digest.to_hex (Digest.string password)
>>
>>

<<concept title="Note on Cryptokit"|
Please note that cryptokit doesn't generate proper ocaml string.
In fact, cryptokit don't encode properly in utf8.
So, if you use that string with a sql server (like with MaCaQue), the
Sql server will fail the insertion in the database with a message like:

{{{
ERROR: 22021: invalid byte sequence for encoding "UTF8": 0xb2
}}}

If you want to use a stronger algorithm than md5 with utf8 encoding,
please look at the [[https://github.com/vincenthz/ocaml-sha|ocaml-sha]] library.
>>
